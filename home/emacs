
(require 'cl)
(require 'package)
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
(setq package-enable-at-startup nil)
(package-initialize)

; list of packages
(setq package-list
      '(
        coffee-mode
        dash
        dockerfile-mode
        editorconfig
        es-mode
        flymake-coffee
        flymake-cursor
        git-gutter
        grandshell-theme
        jade-mode
        js2-mode
        rjsx-mode
        less-css-mode
        markdown-mode
        rust-mode
        stylus-mode
        sws-mode
        yaml-mode
        ))

; fetch the list of packages available
(unless package-archive-contents
  (package-refresh-contents))

; install the missing packages
(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package)))

(setq inhibit-startup-message t)
(setq inhibit-startup-echo-area-message t)
(setq make-backup-files nil backup-inhibited t) ;; Dont backup files
(setq require-final-newline t) ;; End file with newline
(setq next-line-add-newlines nil) ;; Stop at end of file
(setq font-lock-maximum-decoration t)
(show-paren-mode t)
(setq-default line-number-mode t)
(setq-default column-number-mode t)
(setq-default version-control nil)
(setq initial-scratch-message "")
(setq auto-mode-alist
      (cons '("\\.jsp\\'" . html-mode) auto-mode-alist))
(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)
(setq initial-frame-alist (quote (
          (background-color . "black")
          (foreground-color . "white")
          (menu-bar-lines . 0)
          (top . 0)
          (left . 300)
          (width . 100)
          (height . 48)))
)
(setq default-frame-alist (copy-alist initial-frame-alist))
;; Remove butt ugly toolbar
(if (display-graphic-p)
    (progn
      (tool-bar-mode -1)
      (scroll-bar-mode -1)))

;; keep buffers in sync with disk
(global-auto-revert-mode t)

(require 'editorconfig)
(editorconfig-mode 1)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auto-save-default nil)
 '(coffee-tab-width 4)
 '(create-lockfiles nil)
 '(custom-safe-themes
   (quote
    ("f0d8af755039aa25cd0792ace9002ba885fd14ac8e8807388ab00ec84c9497d7" "0251780e8e79d2a5e75eec7ee3b6c646b882495cb884d9dd32f30c60f9d65db6" "a041a61c0387c57bb65150f002862ebcfe41135a3e3425268de24200b82d6ec9" default)))
 '(font-lock-global-modes (quote (not speedbar-mode)))
 '(git-gutter:lighter "")
 '(global-git-gutter-mode t)
 '(global-whitespace-mode t)
 '(indent-tabs-mode nil)
 '(js-indent-level 2)
 '(js2-basic-offset 2)
 '(js2-strict-missing-semi-warning nil)
 '(js2-strict-trailing-comma-warning nil)
 '(make-backup-files nil)
 '(markdown-command "/usr/local/bin/markdown")
 '(markdown-css-path "http://kevinburke.bitbucket.org/markdowncss/markdown.css")
 '(markdown-xhtml-header-content "")
 '(package-selected-packages
   (quote
    (swift-mode rjsx-mode flymake-cursor flymake-coffee toml-mode rust-mode dockerfile-mode yaml-mode stylus-mode markdown-mode less-css-mode json-snatcher js2-mode jade-mode grandshell-theme git-gutter es-mode editorconfig-core editorconfig coffee-mode)))
 '(sass-indent-offset 4)
 '(scalable-fonts-allowed nil)
 '(send-mail-function (quote mailclient-send-it))
 '(tab-width 4)
 '(whitespace-empty-at-bob-regexp "^\\(\\(osdfkjqwelksdfgb
\\)+\\)")
 '(whitespace-line-column -1)
 '(whitespace-style
   (quote
    (face tabs trailing lines space-before-tab indentation empty space-after-tab tab-mark))))

;; on save remove white space
(add-hook 'coffee-mode-hook (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace nil)))
(add-hook 'js2-mode-hook (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace nil)))
(add-hook 'less-css-mode-hook (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace nil)))
(add-hook 'jade-mode-hook (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace nil)))
(add-hook 'rust-mode-hook (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace nil)))

;; on save remove tabs
(setq martin/untabify-modes '(coffee-mode js2-mode less-css-mode))
(defun martin/untabify-hook ()
  (when (member major-mode martin/untabify-modes)
     (untabify (point-min) (point-max))))
(add-hook 'before-save-hook 'martin/untabify-hook)


(add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
(add-to-list 'auto-mode-alist '("\\.jsx\\'" . rjsx-mode))
(add-to-list 'auto-mode-alist '("components\\/.*\\.js\\'" . rjsx-mode))
(add-to-list 'auto-mode-alist '("comp\\/.*\\.js\\'" . rjsx-mode))

;; not working
(setq sws-tab-width 4)

(defun close-all-buffers ()
  (interactive)
  (mapc 'kill-buffer (buffer-list)))

(when (display-graphic-p)

  (defun martin-kill-hide ()
    (interactive)
    (delete-other-windows)
    (close-all-buffers)
    (ns-do-hide-emacs))

  (global-set-key "\C-x\C-c" 'martin-kill-hide)
  (server-start))

;; (setq mac-option-key-is-meta nil)
;; (setq mac-command-key-is-meta t)
;; (setq mac-command-modifier 'meta)
;; (setq mac-option-modifier nil)

(setq mac-command-modifier 'super)
(global-set-key (kbd "s-+") 'text-scale-increase)

(remove-hook 'kill-buffer-query-functions 'server-kill-buffer-query-function)

;; no friggin sound
(setq ring-bell-function #'ignore)

(global-git-gutter-mode +1)

(load-theme 'grandshell t)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:weight extra-light :family "Source Code Pro")))))

(defun sudo-find-file (file-name)
  "Like find file, but opens the file as root."
  (interactive "FSudo Find File: ")
  (let ((tramp-file-name (concat "/sudo::" (expand-file-name file-name))))
    (find-file tramp-file-name)))

;; (add-hook 'after-init-hook #'global-flycheck-mode)
;; (add-hook 'flycheck-mode-hook #'flycheck-rust-setup)

(require 'flymake-coffee)
(add-hook 'coffee-mode-hook 'flymake-coffee-load)
(setq flymake-coffee-coffeelint-configuration-file (expand-file-name "~/.coffeelint.json"))

;; display errors at cursor
(eval-after-load 'flymake '(require 'flymake-cursor))

